Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers. You may assume that each input would have exactly one solution.

For example, given array S = {-1 2 1 -4}, and target = 1.
The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int size = nums.size();
        int i = 0;
        int diff = INT_MAX;
        int result;
        std::sort(nums.begin(), nums.end());
        while(i < size){
            int j = i + 1;
            int k = size - 1;
            while(j < k){
                int sum = nums[i] + nums[j] + nums[k];
                if(std::abs(target - sum) < diff){
                    diff = std::abs(target-sum);
                    result = sum;
                }
                if(sum < target)
                    j++;
                else    k--;
            }
            i++;
        }
        return result;
    }
};
