Given an array of strings, return all groups of strings that are anagrams.

Note: All inputs will be in lower-case.


//I just thought the description of output is ambiguous\
class Solution {
public:
    vector<string> anagrams(vector<string>& strs) {
        vector<string> result;
        int size = strs.size();
        if(size == 0)    return result;
        std::unordered_map<string, vector<int>> mymap;
        
        for(int i = 0; i < size; i++){
            string tmp = strs[i];
            std::sort(tmp.begin(), tmp.end());
            mymap[tmp].push_back(i);
        }
        
        for(auto it = mymap.begin(); it != mymap.end(); it++){
            if((it->second).size() > 1){
                for(int i = 0; i < it->second.size(); i++){
                   result.push_back(strs[(it->second)[i]]); 
                }
            }
        }
        return result;
    }
};
