/*
Given two binary trees, write a function to check if they are equal or not.

Two binary trees are considered equal if they are structurally identical and the nodes have the same value.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        bool is_root_same = true;
        if(p == NULL && q == NULL) return true;                //this must be added, otherwise it will not terminate
        if(p == NULL && q != NULL) return false;
        if(p != NULL && q == NULL) return false;
        if(p != NULL && q != NULL && p->val != q->val)  return false;
        bool is_left_same = isSameTree(p->left, q->left);
        bool is_right_same = isSameTree(p->right, q->right);
        return is_root_same && is_left_same && is_right_same;
    }
};
