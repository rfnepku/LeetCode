Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

push(x) -- Push element x onto stack.
pop() -- Removes the element on top of the stack.
top() -- Get the top element.
getMin() -- Retrieve the minimum element in the stack.

class MinStack {
public:
    void push(int x) {
        pair<int, int> mypair;
        mypair.first = x;
        if(st.empty())
            mypair.second = x;
        else
            mypair.second = x < getMin()? x : getMin();
        st.push(mypair);
    }

    void pop() {
        st.pop();
    }

    int top() {
        return st.top().first;
    }

    int getMin() {
        return st.top().second;
    }
    
    stack<pair<int, int>> st;
};
