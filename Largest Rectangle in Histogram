Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, 
find the area of largest rectangle in the histogram.

//i <= size not size.  we manually add height[size] = 0 so that all the elements in the stack will pop

class Solution {
public:
    int largestRectangleArea(vector<int>& height) {
        int size = height.size();
        if(size == 0)   return 0;
        if(size == 1)   return height[0];
        stack<int> st;
        int result = 0;
        for(int i = 0; i <= size; i++){
            int cur = 0;
            if(i != size) cur = height[i];
            if(st.empty() || cur >= height[st.top()]){
                st.push(i);
                continue;
            }
            while(!st.empty() && cur < height[st.top()]){
                int h = height[st.top()];
                st.pop();
                int area = h * (st.empty()? i: i-st.top()-1); 
                result = std::max(area, result);
            }
            st.push(i);
        }
        
        return result;
    }
};
