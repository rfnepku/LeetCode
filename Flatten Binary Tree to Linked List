Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6
  
class Solution {
public:
    void flatten(TreeNode* root) {
        if(root == NULL) return;
        if(root->left == NULL && root->right == NULL)
            return;
        if(root->left == NULL && root->right != NULL){
            flatten(root->right);
            return;
        }
        if(root->left != NULL && root->right == NULL){
            root->right = root->left;
            root->left = NULL;    //don't forget this assignment
            flatten(root->right);
            return;
        }
        
        flatten(root->left);
        flatten(root->right);
        
        TreeNode* tmp = root->left;
        while(tmp->right != NULL)
            tmp = tmp->right;
            
        tmp->right = root->right;
        root->right = root->left;
        root->left = NULL;      //don't forget this assignment
        return;
    }
};
