Remove all elements from a linked list of integers that have value val.

Example
Given: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6
Return: 1 --> 2 --> 3 --> 4 --> 5

Credits:
Special thanks to @mithmatt for adding this problem and creating all test cases.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head == NULL) return NULL;       //corner case
        
        /* get val from NULL ptr is runtime error
        while(head != NULL && head->val == val)
            head = head->next;
        */
        
        while(head->next != NULL && head->val == val)
            head = head->next;
        
        if(head->next == NULL && head->val == val)
            return NULL;
        
        ListNode* ptr = head;
        ListNode* ptr_next = ptr->next;
        while(ptr_next != NULL){
            if(ptr_next->val == val){
                ptr->next = ptr_next->next;
                ptr_next = ptr_next->next;
            }
            else{
                ptr = ptr->next;
                ptr_next = ptr_next->next;
            }
        }
        return head;
    }
};
